version: '2' #What is this version????????

networks:
  basic: #basic is the network name, it can be anything

services: #Actual environmnet variables are assigned here

  #############################################
  # Certificate Authorities
  #############################################
  # Organization 1
  #############################################
  ca1.example.com:

    image: hyperledger/fabric-ca #Fabric docker image

    environment: #Environment varbiles for organization 1 in docker container

    #The below variables are common for all the certificate authorities 
    #The paths are set according to docker container
    #Note 1: This paths are not according to the local machine
    #Note 2: Set the paths according to the mapping which is done in the volumes section below
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca1.example.com
      #Certificate Authority files present in "ca" folder inside respective peerOrganization folders
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/8305816389e1a0d2f207dccd9f3f7dfda4d60aa96648bba545fa39a851fd60b2_sk
    
    #On which port should this docker container for org1 should run
    #Syntax --> "local_system_port : docker_container_port"
    ports: 
      - "7054:7054"
    
    #What this command is going to do??????????
    command: sh -c 'fabric-ca-server start -b admin:adminpw'

    #Mapping the files in local machine to the docker container machine
    #Syntax ---> local_file_dir : docker_container_dir
    volumes:
      - ./crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    
    container_name: ca1.example.com
    
    #Network name as defined above. You can give any name as per above
    networks:
      - basic

  ################################################
  # CA_Organization 2
  ################################################
  ca2.example.com:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca2.example.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/be7214381ac9c831f1aa6415c88c67543d3638b3951adb1d486297cbd2127e51_sk
    ports: 
      - "6054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca2.example.com
    networks:
      - basic

  ##############################################
  # CA_Organization 3
  ##############################################
  ca3.example.com:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca3.example.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org3.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/44136e06f8d3534278e5a57afbc5acc60bbb296c92bfa0a7636d180205023edd_sk
    ports: 
      - "5054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/org3.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca3.example.com
    networks:
      - basic

  #############################################
  # CA_Organization 4
  #############################################
  ca4.example.com:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca4.example.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org4.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/8c3bc5213b5bb25cef5a97040370362d4923a0604e704989da6944d61ff736c8_sk
    ports: 
      - "4054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/org4.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca4.example.com
    networks:
      - basic

  ###########################################
  # Orderer Docker Container Config
  ###########################################
  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer
    #Below variables are common to all the network
    environment:
      #Use debug only in development never use it in production. Use info or error in production
      #Bcoz this takes lot of time to execute bcoz it creates log files while debugging
      #And also in some log file it may be some sensitive data
      - ORDERER_GENERAL_LOGLEVEL=debug
      #What is this?????????
      - FABRIC_LOGGING_SPEC=info
      #This is in docker container address
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      #It is perferred to use file type
      - ORDERER_GENERAL_GENESISMETHOD=file
      #Above we have mentioned files, so we need to give the path of genesis.block according to docker container, that is according to mapping in volumes section
      - OERDERER_GENERAL_GENESISFILE=/etc/hyperledger/fabric/genesisblock
      #MSPID defined in configtx.yaml file in orderer section
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      #Location of the msp certificate files according to the mapping in volumes section
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp

      # Enable TLS
      # - ORDERER_GENERAL_TLS_ENABLED=true
      # - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/tls/orderer/tls/server.key
      # - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/tls/orderer/tls/server.crt
      # - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/tls/orderer/tls/ca.crt]
      # - GRPC_GO_LOG_VERBOSITY_LEVEL=99 
      # - GRPC_GO_LOG_SEVERITY_LEVEL=info
      
      #Define a working directory in the docker container
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer

      #What is this command????????????????
    command: orderer

      #ports on which orderer should run
      #Syntax --> "local_system_port : docker_container_port"
    ports:
      - 7050:7050 #There are double quotes here, why????????
      
      #Mapping paths in local directory to docker container directory
      #Syntax ---> local_file_dir : docker_container_dir
    volumes:
      - ./channel-artifacts/genesis.block:/etc/hyperledger/fabric/genesisblock
      - ./channel-artifacts/:/etc/hyperledger/configtx
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/:/etc/hyperledger/msp/orderer
        #Why the peers paths are added?????????????
      - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peerOrg1/peer0
      - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/msp/peerOrg2/peer0
      - ./crypto-config/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/:/etc/hyperledger/msp/peerOrg3/peer0
      - ./crypto-config/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/:/etc/hyperledger/msp/peerOrg4/peer0

    networks:
      - basic

  ##################################################
  # Peer Organizations settings
  ##################################################
  # peer0 of Org1
  ##################################################
  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer

    #Environment variables common to all the peers
    environment:
      #Virtual machine endpoint
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      #Peer ID defined in crypto-config file
      - CORE_PEER_ID=peer0.org1.example.com
      #?????????????????????????????
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer0/
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=new_network_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=

    working_dir: /opt/gopath/src/github.com/hyperledger/fabric

    #This command will start the peer node
    command: peer node start --peer-chaincodedev=true

    #Ports to run the docker container
    #Syntax ---> local:docker
    ports:
      - 7051:7051

    #Mapping local directory to dokcer container directory
    volumes:
      - /var/run/:/host/var/run
      - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/msp/peer0
      - ./crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
      - ./channel-artifacts:/etc/hyperledger/configtx

    #Define the database and the orderers list which peer can communicate
    depends_on:
      - orderer.example.com
      - couchdb

    networks:
      - basic

  ##################################################
  # peer0 of Org2
  ##################################################
  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org2.example.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer0/
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=new_network_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-chaincodedev=true
    ports:
      - 7055:7051
    volumes:
      - /var/run/:/host/var/run
      - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/msp/peer0
      - ./crypto-config/peerOrganizations/org2.example.com/users:/etc/hyperledger/msp/users
      - ./channel-artifacts:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - couchdb
    networks:
      - basic

  ##################################################
  # peer0 of Org3
  ##################################################
  peer0.org3.example.com:
    container_name: peer0.org3.example.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org3.example.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org3MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer0/
      - CORE_PEER_ADDRESS=peer0.org3.example.com:7051
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=new_network_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-chaincodedev=true
    ports:
      - 7057:7051
    volumes:
      - /var/run/:/host/var/run
      - ./crypto-config/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/msp:/etc/hyperledger/msp/peer0
      - ./crypto-config/peerOrganizations/org3.example.com/users:/etc/hyperledger/msp/users
      - ./channel-artifacts:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - couchdb
    networks:
      - basic

  ##################################################
  # peer0 of Org4
  ##################################################
  peer0.org4.example.com:
    container_name: peer0.org4.example.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org4.example.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org4MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer0/
      - CORE_PEER_ADDRESS=peer0.org4.example.com:7051
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=new_network_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-chaincodedev=true
    ports: 
      - 7059:7051
    volumes:
      - /var/run/:/host/var/run
      - ./crypto-config/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/msp:/etc/hyperledger/msp/peer0
      - ./crypto-config/peerOrganizations/org4.example.com/users:/etc/hyperledger/msp/users
      - ./channel-artifacts:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - couchdb
    networks:
      - basic

  #########################################
  # CouchDB
  #########################################

  couchdb:
    container_name: couchdb
    image: hyperledger/fabric-couchdb
    
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - basic

  #########################################
  # cli container
  #########################################

  cli:
    container_name: cli
    image: hyperledger/fabric-tools 

    #?????????????????????????
    tty: true

    #Environment Variables
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./chaincode/:/opt/gopath/src/github.com/
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer
    networks:
        - basic